// <auto-generated />
using System;
using Dizimo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dizimo.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20230514230509_atualizaCP")]
    partial class atualizaCP
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dizimo.Models.ComunidadeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ControlePagamentoModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ControlePagamentoModelId");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("Dizimo.Models.ControlePagamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Abril")
                        .HasColumnType("bit");

                    b.Property<bool>("Agosto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Atualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("int");

                    b.Property<bool>("Dezembro")
                        .HasColumnType("bit");

                    b.Property<int>("DizimistaId")
                        .HasColumnType("int");

                    b.Property<bool>("Fevereiro")
                        .HasColumnType("bit");

                    b.Property<bool>("Janeiro")
                        .HasColumnType("bit");

                    b.Property<bool>("Julho")
                        .HasColumnType("bit");

                    b.Property<bool>("Junho")
                        .HasColumnType("bit");

                    b.Property<bool>("Maio")
                        .HasColumnType("bit");

                    b.Property<bool>("Marco")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MesAno")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Novembro")
                        .HasColumnType("bit");

                    b.Property<bool>("Outubro")
                        .HasColumnType("bit");

                    b.Property<bool>("Setembro")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int?>("comunidadecpId")
                        .HasColumnType("int");

                    b.Property<int?>("dizimistacpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("comunidadecpId");

                    b.HasIndex("dizimistacpId");

                    b.ToTable("ControlePagamentos");
                });

            modelBuilder.Entity("Dizimo.Models.DizimistaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ControlePagamentoModelId")
                        .HasColumnType("int");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ControlePagamentoModelId");

                    b.ToTable("Dizimistas");
                });

            modelBuilder.Entity("Dizimo.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadeId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dizimo.Models.ComunidadeModel", b =>
                {
                    b.HasOne("Dizimo.Models.ControlePagamentoModel", null)
                        .WithMany("ListaPagamentoComunidades")
                        .HasForeignKey("ControlePagamentoModelId");

                    b.HasOne("Dizimo.Models.UsuarioModel", null)
                        .WithMany("ListaComunidades")
                        .HasForeignKey("UsuarioModelId");
                });

            modelBuilder.Entity("Dizimo.Models.ControlePagamentoModel", b =>
                {
                    b.HasOne("Dizimo.Models.ComunidadeModel", "comunidadecp")
                        .WithMany()
                        .HasForeignKey("comunidadecpId");

                    b.HasOne("Dizimo.Models.DizimistaModel", "dizimistacp")
                        .WithMany()
                        .HasForeignKey("dizimistacpId");

                    b.Navigation("comunidadecp");

                    b.Navigation("dizimistacp");
                });

            modelBuilder.Entity("Dizimo.Models.DizimistaModel", b =>
                {
                    b.HasOne("Dizimo.Models.ControlePagamentoModel", null)
                        .WithMany("ListaDizimistaComunidades")
                        .HasForeignKey("ControlePagamentoModelId");
                });

            modelBuilder.Entity("Dizimo.Models.UsuarioModel", b =>
                {
                    b.HasOne("Dizimo.Models.ComunidadeModel", "comunidade")
                        .WithMany()
                        .HasForeignKey("ComunidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comunidade");
                });

            modelBuilder.Entity("Dizimo.Models.ControlePagamentoModel", b =>
                {
                    b.Navigation("ListaDizimistaComunidades");

                    b.Navigation("ListaPagamentoComunidades");
                });

            modelBuilder.Entity("Dizimo.Models.UsuarioModel", b =>
                {
                    b.Navigation("ListaComunidades");
                });
#pragma warning restore 612, 618
        }
    }
}
